<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="interface-test-suite.xml" />
	<munit:test name="interface-test-suite-bookmyholiday-proc-api-main-BAD_REQUEST-Test" doc:id="b20e00e2-ee26-4ecc-b389-bbc04ad2d12a" description="Test" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when APIKIT:BAD_REQUEST" doc:id="9c4ba413-65df-4cee-abc7-5e73a0891fe5" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-main" doc:id="9b1afcc0-b553-423d-869f-903431fc0ea8" name="bookmyholiday-proc-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="0486c5e4-069e-4ca2-9668-4ae54193e685" actual="#[vars.httpStatus]" expected="#[400]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="interface-test-suite-bookmyholiday-proc-api-main-NOT_FOUND-Test" doc:id="f3a37e9f-eb9d-4ee1-af17-399afb6d0202" description="Test" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_FOUND" doc:id="b61b31c3-381c-436c-9480-ec4a183a9b67" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-main" doc:id="4919c869-02b7-43a0-962d-702e69324bc4" name="bookmyholiday-proc-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="4868853c-8e9b-48ca-b824-a5503d1057b0" actual="#[vars.httpStatus]" expected="#[404]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="interface-test-suite-bookmyholiday-proc-api-main-METHOD_NOT_ALLOWED-Test" doc:id="de6589bd-46b7-476e-b95f-598bc9efcfe0" description="Test" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when APIKIT:METHOD_NOT_ALLOWED" doc:id="e1ae4dcd-32e5-428c-8667-e975917a2734" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-main" doc:id="ce34f29b-38e8-43e2-8859-365e08a17cab" name="bookmyholiday-proc-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="030939c0-fb98-4325-bc43-ff57f1035dc6" actual="#[vars.httpStatus]" expected="#[405]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="interface-test-suite-bookmyholiday-proc-api-main-NOT_IMPLEMENTED-Test" doc:id="30bf7774-d3b3-4265-a566-276803db0ff2" description="Test" expectedErrorType="APIKIT:NOT_IMPLEMENTED">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_IMPLEMENTED" doc:id="3b4f29d2-7e30-4065-bfeb-1102e54fc8e0" processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-main" doc:id="00f41a80-f80c-475b-9bed-136750481bc3" name="bookmyholiday-proc-api-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="d64a1fe2-a92e-4abb-acc9-e92a38213b20" actual="#[vars.httpStatus]" expected="#[501]" />
		</munit:validation>
	</munit:test>

	<munit:test name="interface-test-suite-bookmyholiday-proc-api-main-NOT_ACCEPTABLE-Test" doc:id="ffc22a5d-98be-47a9-a5ab-2cb2b9d8b814" description="Test" expectedErrorType="APIKIT:NOT_ACCEPTABLE">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_ACCEPTABLE" doc:id="d962fbf0-8e47-4fd2-b5e4-2369bd8ddb7d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-main" doc:id="61ae468e-9f70-402b-a089-9655ee4734f0" name="bookmyholiday-proc-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="df3e2b15-7e2c-4efc-921c-6f09f6a1082c" actual="#[vars.httpStatus]" expected="#[406]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="interface-test-suite-bookmyholiday-proc-api-main-UNSUPPORTED_MEDIA_TYPE-Test" doc:id="296e71ad-84d1-48e9-a469-d85690e73f85" description="Test" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="868432e6-f02c-4302-852d-c258c92a6dd2" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-main" doc:id="82cd19bc-e482-41d1-b1bb-9a33f084a400" name="bookmyholiday-proc-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="8dedb8b7-ee74-4dae-ba77-c2b07dcea864" actual="#[vars.httpStatus]" expected="#[415]"/>
		</munit:validation>
	</munit:test>


	<munit:test name="interface-test-suite-bookmyholiday-proc-api-consoleTest" doc:id="e066f9ce-7c86-4bfa-bca9-88395ade4ffd" description="Test" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when APIKIT:NOT_FOUND" doc:id="a8f2c693-e96e-4d4e-856f-a82e43272840" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bookmyholiday-proc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookmyholiday-proc-api-console" doc:id="25d1b4b7-ca72-488a-b0fe-ec313ab30967" name="bookmyholiday-proc-api-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="httpStatus" doc:id="dff58650-6b3f-47ab-af5f-de436eaff785" actual="#[vars.httpStatus]" expected="404"/>
		</munit:validation>
	</munit:test>



</mule>
